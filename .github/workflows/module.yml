name: Module

on:
  push:
    branches:
      - patch-1
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-20.04
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-module-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            gradle-deps
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-module-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            gradle-deps
      - name: Cache Ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-ccache-cache-
      - name: Install ccache
        run: |
          sudo apt-get install -y ccache
          ccache -o max_size=2G
          ccache -o hash_dir=false
      - name: Build with Gradle
        run: |
          mkdir -p ~/.gradle/wrapper
          mkdir -p ~/.gradle/caches
          [ $(du -s ~/.gradle/wrapper | awk '{ print $1 }') -gt 250000 ] && rm -rf ~/.gradle/wrapper/* || true
          find ~/.gradle/caches -exec touch -d "2 days ago" {} + || true
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          ./gradlew zipRiruDebug zipRiruRelease zipZygiskDebug zipZygiskRelease
      - name: Prepare artifact
        if: success()
        id: prepareArtifact
        run: |
          riruReleaseName=`ls out/sui-riru-*-release.zip | awk -F '(/|.zip)' '{print $2}'` && echo "::set-output name=riruReleaseName::$riruReleaseName"
          riruDebugName=`ls out/sui-riru-*-debug.zip | awk -F '(/|.zip)' '{print $2}'` && echo "::set-output name=riruDebugName::$riruDebugName"
          zygiskReleaseName=`ls out/sui-zygisk-*-release.zip | awk -F '(/|.zip)' '{print $2}'` && echo "::set-output name=zygiskReleaseName::$zygiskReleaseName"
          zygiskDebugName=`ls out/sui-zygisk-*-debug.zip | awk -F '(/|.zip)' '{print $2}'` && echo "::set-output name=zygiskDebugName::$zygiskDebugName"
          unzip out/sui-riru-*-release.zip -d sui-riru-release
          unzip out/sui-riru-*-debug.zip -d sui-riru-debug
          unzip out/sui-zygisk-*-release.zip -d sui-zygisk-release
          unzip out/sui-zygisk-*-debug.zip -d sui-zygisk-debug
      - name: Upload Riru release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepareArtifact.outputs.riruReleaseName }}
          path: './sui-riru-release/*'
      - name: Upload Riru debug
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepareArtifact.outputs.riruDebugName }}
          path: './sui-riru-debug/*'
      - name: Upload Zygisk release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepareArtifact.outputs.zygiskReleaseName }}
          path: './sui-zygisk-release/*'
      - name: Upload Zygisk debug
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepareArtifact.outputs.zygiskDebugName }}
          path: './sui-zygisk-debug/*'
      - name: Upload mappings
        uses: actions/upload-artifact@v3
        with:
          name: mappings
          path: |
            "module/build/outputs/mapping/release"
            "ui/build/outputs/mapping/release"
